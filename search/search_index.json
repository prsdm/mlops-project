{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Insurance Cross Sell Prediction \ud83c\udfe0\ud83c\udfe5","text":"<p>Welcome to the Insurance Cross-Selling Prediction project! This documentation is designed to help beginners walk through the entire process, from setting up the project environment to training a machine learning model and deploying it. The goal of this project is to predict which customers are most likely to purchase additional insurance products using a machine learning model.</p>"},{"location":"#diagram","title":"Diagram","text":"<p>Below is the architecture diagram that illustrates the flow of the project from data ingestion to model deployment: </p>"},{"location":"#get-started","title":"Get Started","text":"<p>To get started with the project, follow the steps below:</p>"},{"location":"#1-clone-the-repository","title":"1. Clone the Repository","text":"<p>Clone the project repository from GitHub:</p> <pre><code>git clone https://github.com/prsdm/ml-project.git\n</code></pre> <pre><code>cd ml-project\n</code></pre>"},{"location":"#2-set-up-the-environment","title":"2. Set Up the Environment","text":"<p>Ensure you have Python 3.8+ installed. Create a virtual environment and install the necessary dependencies:</p> <pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\npip install -r requirements.txt\n</code></pre> <p>Alternatively, you can use the Makefile command:</p> <pre><code>make setup\n</code></pre>"},{"location":"#3-data-preparation","title":"3. Data Preparation","text":"<p>Pull the data from DVC. If this command doesn't work, the train and test data are already present in the data folder:</p> <pre><code>dvc pull\n</code></pre>"},{"location":"#4-train-the-model","title":"4. Train the Model","text":"<p>To train the model, run the following command:</p> <pre><code>python main.py \n</code></pre> <p>Or use the Makefile command:</p> <pre><code>make run\n</code></pre> <p>This script will load the data, preprocess it, train the model, and save the trained model to the models/ directory.</p>"},{"location":"#5-fastapi","title":"5. FastAPI","text":"<p>Start the FastAPI application by running:</p> <pre><code>uvicorn app:app --reload\n</code></pre>"},{"location":"#6-docker","title":"6. Docker","text":"<p>To build the Docker image and run the container:</p> <pre><code>docker build -t my_fastapi .\n</code></pre> <pre><code>docker run -p 80:80 my_fastapi\n</code></pre> <p>Once your Docker image is built, you can push it to Docker Hub, making it accessible for deployment on any cloud platform.</p>"},{"location":"#7-monitor-the-model","title":"7. Monitor the Model","text":"<p>Integrate Evidently AI to monitor the model for data drift and performance degradation:</p> <pre><code>run monitor.ipynb file\n</code></pre>"}]}